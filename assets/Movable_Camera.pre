@Section:Camera_14
@Entity 
{
"Components": {"CameraComponent":{"aspect_ratio":1.7777777910232544,"fov":45.55099868774414,"zFar":1000.0,"zNear":0.10000000149011612},"LabelComponent":{"label":"Camera"},"TransformComponent":{"props":{"mode":0},"rotation":{"w":1.0,"x":0.0,"y":0.0,"z":0.0},"size":{"x":1.0,"y":1.0,"z":1.0},"translation":{"x":0.0,"y":0.0,"z":0.0}}},
"Children": []
}

@EndSection
@Section:Root
@Entity 
{
"Components": {"LabelComponent":{"label":"Flying Camera"},"TransformComponent":{"props":{"mode":0},"rotation":{"w":0.9805910587310791,"x":-0.19603177905082703,"y":-0.0034986790269613266,"z":-0.0006994274444878101},"size":{"x":1.0,"y":1.0,"z":1.0},"translation":{"x":9.845364570617676,"y":16.138397216796875,"z":12.218109130859375}}},
"Children": ["local#Camera_14"]
}
@Entity:Inline_Script










function OnStart()

CreateProperty_FLOAT("Speed",1.0)

end

function Recieve(message) 
	print("message recieved:" .. message)
end

function OnUpdate(delta_time) 
	local speed = GetProperty_FLOAT("Speed")
	if(IsMouseButtonPressed(MouseButtonCode.MOUSE_BUTTON_RIGHT)) then
	
		if(IsKeyPressed(KeyCode.KEY_W)) then
			local translation = GetTranslation()
			translation = translation + rotate_vec3(vec3(0,0,-1*speed), GetRotation())
			SetTranslation(translation)
		end

		if(IsKeyPressed(KeyCode.KEY_S)) then
			local translation = GetTranslation()
			translation = translation + rotate_vec3(vec3(0,0,1*speed), GetRotation())
			SetTranslation(translation)
		end

		if(IsKeyPressed(KeyCode.KEY_A)) then
			local translation = GetTranslation()
			translation = translation + rotate_vec3(vec3(-1*speed,0,0), GetRotation())
			SetTranslation(translation)
		end

		if(IsKeyPressed(KeyCode.KEY_D)) then
			local translation = GetTranslation()
			translation = translation + rotate_vec3(vec3(1*speed,0,0), GetRotation())
			SetTranslation(translation)
		end

		local norm_scree_pos = GetMousePositionChange()
		local offset = vec2({ x = 0.0, y =0.0 })
		
		norm_scree_pos = offset + norm_scree_pos;
		
		norm_scree_pos = norm_scree_pos * vec2({-1,-1});
		norm_scree_pos.y = math.min(math.max(-0.8, norm_scree_pos.y),0.8)
		
		pos = {
		x = math.sin(norm_scree_pos.x * 3.1415926) * math.cos(norm_scree_pos.y * 3.1415926/2) ,
		y = math.sin(norm_scree_pos.y * 3.1415926 / 2),
		z = math.cos(norm_scree_pos.x * 3.1415926) * math.cos(norm_scree_pos.y * 3.1415926/2)
		}
	
		local pos = rotate_vec3(pos, GetRotation())

		local rot = quat_lookat(-vec3(pos), vec3({0,1,0}))
	
		SetRotation(rot)
	end

end



























@EndSection
