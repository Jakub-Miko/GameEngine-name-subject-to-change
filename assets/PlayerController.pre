@Section:Camera_2097158
@Entity 
{
"Components": {"CameraComponent":{"aspect_ratio":1.7777777910232544,"fov":45.0,"zFar":200.0,"zNear":0.10000000149011612},"LabelComponent":{"label":"Camera"},"TransformComponent":{"props":{"mode":0},"rotation":{"w":-0.41016462445259094,"x":0.06856358051300049,"y":0.8969848155975342,"z":0.14994098246097565},"size":{"x":1.0,"y":1.0,"z":1.0},"translation":{"x":-14.305237770080566,"y":8.504685401916504,"z":-12.371309280395508}}},
"Children": []
}

@EndSection
@Section:CollisionBox_2097152
@Entity 
{
"Components": {"LabelComponent":{"label":"CollisionBox"},"MeshComponent":{"path":"/assets/Box.mesh"},"PhysicsComponent":{"is_kinematic":false,"mass":1.0,"object_type":0,"props":1,"shape_type":3},"TransformComponent":{"props":{"mode":0},"rotation":{"w":1.0,"x":0.0,"y":0.0,"z":0.0},"size":{"x":1.0,"y":1.0,"z":1.0},"translation":{"x":0.0,"y":5.0,"z":0.0}}},
"Children": ["local#Camera_2097158"]
}

@EndSection
@Section:Root
@Entity 
{
"Components": {"LabelComponent":{"label":"PhysicsTest"},"TransformComponent":{"props":{"mode":0},"rotation":{"w":1.0,"x":0.0,"y":0.0,"z":0.0},"size":{"x":1.0,"y":1.0,"z":1.0},"translation":{"x":0.0,"y":0.0,"z":0.0}}},
"Children": ["local#CollisionBox_2097152"]
}
@Entity:Inline_Script

function OnCollision(event)
if(event.num_collision_points == 0) then return end
local distance = event.collision_points[1].y - GetChildWorldTranslation("CollisionBox").y + GetChildScale("CollisionBox").y
if (math.abs(distance)< 0.05) then 
	SetProperty_INT("Collides_bottom",1)
else 
	SetProperty_INT("Collides_bottom",0)
end
print("Shit")
end

function OnStart()
	SetAngularFactor("CollisionBox",vec3(0.0,0.0,0.0))
	CreateProperty_FLOAT("Speed",1.0)
	CreateProperty_FLOAT("JumpForce",1.0)
	CreateProperty_FLOAT("Friction",1.0)
	CreateProperty_FLOAT("MaxVel",1.0)
	CreateProperty_INT("Collides_bottom",0)
	local friction = GetProperty_FLOAT("Friction")
	SetFriction("CollisionBox",friction)
end

function OnUpdate(delta_time) 
	local speed = GetProperty_FLOAT("Speed")
	local velocity = GetLinearVelocity("CollisionBox")
	speed = speed - GetVector3Length(velocity);

	local jump_force = GetProperty_FLOAT("JumpForce")
	local max_velocity = GetProperty_FLOAT("MaxVel")
	local current_rot = GetChildRotation("Camera")

	local is_on_ground = false;
	local world_trans = GetChildWorldTranslation("CollisionBox")
	local raycast_result = RayCastPhysicsClosest(world_trans,world_trans-vec3(0.0,1000000.0,0.0))
	if(IsEntityValid(raycast_result.hit_ent)) then

	local distance_from_ground = -(raycast_result.hit_pos - world_trans).y - GetChildScale("CollisionBox").y
	if (distance_from_ground < 0.1) then
		is_on_ground = true
	end
	end

	is_on_ground = is_on_ground or (GetProperty_INT("Collides_bottom") == 1)
	if(is_on_ground) then
		print("Is On Ground")
	else
		print("Is Not On Ground")
	end
	if(IsMouseButtonPressed(MouseButtonCode.MOUSE_BUTTON_RIGHT)) then
	
		local move = false;	
		if(IsKeyPressed(KeyCode.KEY_W)) then
			
			local translation =  rotate_vec3(vec3(0,0,-1*speed), current_rot) * vec3(1.0,0.0,1.0)
			ApplyForce("CollisionBox",translation)
			move = true;
		end

		if(IsKeyPressed(KeyCode.KEY_S)) then
			
			local translation =  rotate_vec3(vec3(0,0,1*speed), current_rot) * vec3(1.0,0.0,1.0)
			ApplyForce("CollisionBox",translation)
			move = true;

		end

		if(IsKeyPressed(KeyCode.KEY_A)) then
			
			local translation =  rotate_vec3(vec3(-1*speed,0,0), current_rot) * vec3(1.0,0.0,1.0)
			ApplyForce("CollisionBox",translation)
			move = true;
		end

		if(IsKeyPressed(KeyCode.KEY_D)) then
			local translation =  rotate_vec3(vec3(1*speed,0,0), current_rot) * vec3(1.0,0.0,1.0)

			ApplyForce("CollisionBox",translation)
			move = true;
		end

		if(IsKeyPressed(KeyCode.KEY_SPACE) and is_on_ground) then

			ApplyForce("CollisionBox",vec3(0.0,1.0*jump_force,0.0))
			move = true;
		end

		local norm_scree_pos = GetMousePositionChange()
		local offset = vec2({ x = 0.0, y =0.0 })
	
		norm_scree_pos = offset + norm_scree_pos;
	
		norm_scree_pos = norm_scree_pos * vec2({-1,-1});
		norm_scree_pos.y = math.min(math.max(-0.8, norm_scree_pos.y),0.8)
	
		local pos = vec3(math.sin(norm_scree_pos.x * 3.1415926) * math.cos(norm_scree_pos.y * 3.1415926/2) ,math.sin(norm_scree_pos.y * 3.1415926 / 2),math.cos(norm_scree_pos.x * 3.1415926) * math.cos(norm_scree_pos.y * 3.1415926/2))
	
		pos = rotate_vec3(-pos, GetChildRotation("Camera"))

		local rot = quat_lookat(vec3(pos), vec3({0,1,0}))
	
		SetChildTranslation("Camera", -vec3(pos)*vec3(20.0,20.0,20.0) + vec3(0,2,0))
		SetChildRotation("Camera", rot)
	end
	SetProperty_INT("Collides_bottom",0)

end


















@EndSection
